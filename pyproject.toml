[tool.isort]
profile = "google"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
force_single_line = false
combine_as_imports = true
skip_gitignore = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pylint]
max-line-length = 88
disable = [
    "C0103",  # invalid-name
    "C0305",  # trailing-newlines
    "C0330",  # wrong-hanging-indentation
    "C0326",  # bad-whitespace
    "W0511",  # fixme
    "R0902",  # too-many-instance-attributes
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0917",  # too-many-positional-arguments
]
extension-pkg-whitelist = ["pydantic"]
good-names = ["i", "j", "k", "ex", "Run", "_", "pk", "id"]
ignore-paths = ["venv/*"]
init-hook = '''
import os
import sys
from pathlib import Path
project_root = Path(__file__).resolve().parent
sys.path.append(str(project_root))
sys.path.append(str(project_root / "backend"))
sys.path.append(str(project_root / "backend/src"))
'''

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "learn_anything"
version = "0.1.0"
requires-python = ">=3.10"

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
disallow_incomplete_defs = true
